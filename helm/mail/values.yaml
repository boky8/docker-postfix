replicaCount: 1

image:
  repository: boky/postfix
  # tag: "" # If not specified uses chart's AppVersion as the tag
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true # Specifies whether a service account should be created
  annotations: {} # Annotations to add to the service account
  name: "" # The name of the service account to use. If not set and create is true, a name is generated using the fullname template

service:
  type: ClusterIP
  port: 587
  labels: {}
  annotations: {}
  # nodePort:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: {}
  annotations: {}

nodeSelector: {}
tolerations: []
affinity: {}
extraVolumes: []
extraVolumeMounts: []
extraInitContainers: []
extraEnv: []

deployment:
  labels: {}
  annotations: {}

pod:
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  labels: {}
  annotations: {}

container:
  postfix:
    securityContext: {}

# Define data which should be stored in a Secret
# (and shared with the pod as environment variables)
# secret:
#   hello: world

config:
  general: {}
    # e.g.
    # TZ:
    # FORCE_COLOR:
    # INBOUND_DEBUGGING:
    # ALLOWED_SENDER_DOMAINS:
    # ALLOW_EMPTY_SENDER_DOMAINS:
    # LOG_FORMAT:
    # RELAYHOST:
    # RELAYHOST_USERNAME:
    # RELAYHOST_PASSWORD:
    # RELAYHOST_TLS_LEVEL:
    # MASQUERADED_DOMAINS:
    # SMTP_HEADER_CHECKS:
    # DKIM_SELECTOR:
    # DKIM_AUTOGENERATE:
  postfix: {}
    # e.g.
    # myhostname: "postfix"
  opendkim: {}
    # e.g.
    # RequireSafeKeys: "yes"

persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  existingClaim: ""
  size: 1Gi
  storageClass: ""


readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 60
  failureThreshold: 2
  exec:
    command:
      - sh
      - -c
      - 'printf "EHLO healthcheck\n" | nc 127.0.0.1 587 | grep -qE "^220.*ESMTP Postfix"'
livenessProbe:
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 2
  exec:
    command:
      - sh
      - -c
      - 'ps axf | fgrep -v grep | fgrep -q "{supervisord}" && ps axf | fgrep -v grep | fgrep -q "/usr/libexec/postfix/master"'
startupProbe:
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 12
  exec:
    command:
      - sh
      - -c
      - 'ps axf | fgrep -v grep | fgrep -q "{supervisord}" && ps axf | fgrep -v grep | fgrep -q "{postfix-script}" && ps axf | fgrep -v grep | fgrep -q "{opendkim.sh}"'
